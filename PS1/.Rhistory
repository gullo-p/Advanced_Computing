library(ggplot2)
library(mvtnorm)
# create small wrapper functions
sigmaXY <- function(rho, sdX, sdY) {
covTerm <- rho * sdX * sdY
VCmatrix <- matrix(c(sdX^2, covTerm, covTerm, sdY^2),
2, 2, byrow = TRUE)
return(VCmatrix)
}
genBVN <- function(n = 1, seed = NA, muXY=c(0,1), sigmaXY=diag(2)) {
if(!is.na(seed)) set.seed(seed)
rdraws <- rmvnorm(n, mean = muXY, sigma = sigmaXY)
return(rdraws)
}
loanData <- function(noApproved, noDenied, noUndecided, muApproved, muDenied, muUndecided, sdApproved,
sdDenied, sdUndecided, rhoApproved, rhoDenied, rhoUndecided, seed=1111) {
sigmaApproved <- sigmaXY(rho=rhoApproved, sdX=sdApproved[1], sdY=sdApproved[2])
sigmaDenied <- sigmaXY(rho=rhoDenied, sdX=sdDenied[1], sdY=sdDenied[2])
sigmaUndecided <- sigmaXY(rho=rhoUndecided, sdX=sdUndecided[1], sdY=sdUndecided[2])
approved <- genBVN(noApproved, muApproved, sigmaApproved, seed = seed)
denied <- genBVN(noDenied, muDenied, sigmaDenied, seed = seed+1)
undecided <- genBVN(noUndecided, muUndecided, sigmaUndecided, seed=seed + 2)
loanDf <- as.data.frame(rbind(approved,denied,undecided))
deny <- c(rep("Approved", noApproved), rep("Denied", noDenied), rep("Undecided", noUndecided))
target <- c(rep(0, noApproved), rep(1, noDenied), rep(2,noUndecided))
target1 <- c(rep(1,noApproved), rep(0,noDenied+noUndecided))   ##creating the three "fake" targets
target2 <- c(rep(0,noApproved), rep(1,noDenied), rep(0,noUndecided))
target3 <- c(rep(0, noApproved + noDenied), rep(1, noUndecided))
loanDf <- data.frame(loanDf, deny, target, target1, target2, target3)
colnames(loanDf) <- c("PIratio", "solvency", "deny", "target", "target1", "target2", "target3")
return(loanDf)
}
# generating some data
loanDf <- loanData(noApproved=50, noDenied=50, noUndecided=50, c(4, 150), c(10, 100), c(4,100),
c(1,20), c(2,30), c(1,15), -0.1, 0.6, 0.2, 1221)
# illustrating the data, note that with ggplot we need to additionally
# specify font family
ggplot(data = loanDf,
aes(x = solvency, y = PIratio, colour=deny, fill=deny)) +
geom_point() +
xlab("solvency") +
ylab("PIratio") +
theme_bw() +
theme(text=element_text(family="Arial"))
###For computing the decision boundaries we have to run three different regressions on the three different targets
datafit1 <- lm(target1 ~ solvency + PIratio +1, data=loanDf)
weights1 <- coef(datafit1)[c("solvency","PIratio")]
bias1 <- coef(datafit1)[1]
datafit2 <- lm(target2 ~ solvency + PIratio +1, data=loanDf)
weights2 <- coef(datafit2)[c("solvency","PIratio")]
bias2 <- coef(datafit2)[1]
datafit3 <- lm(target3 ~ solvency + PIratio +1, data=loanDf)
weights3 <- coef(datafit3)[c("solvency","PIratio")]
bias3 <- coef(datafit3)[1]
##computing the decision boundaries
x <- seq(min(loanDf["solvency"]), max(loanDf["solvency"]),
length.out = nrow(loanDf))
y12 <- ((weights1[1] - weights2[1])/(weights2[2] - weights1[2])) * x + (bias1 - bias2)/(weights2[2] - weights1[2])
boundary_12 <-   data.frame(solvency=x, PIratio=y12,
bound=rep("Boundary_app/deny", length(x)))  ##Boundary between Approved and Denied
y13 <-  ((weights1[1] - weights3[1])/(weights3[2] - weights1[2])) * x + (bias1 - bias3)/(weights3[2] - weights1[2])
boundary_13 <- data.frame(solvency=x, PIratio=y13,
bound=rep("Boundary_app/undecided", length(x)))
y23 <- ((weights2[1] - weights3[1])/(weights3[2] - weights2[2])) * x + (bias2 - bias3)/(weights3[2] - weights2[2])
boundary_23 <- data.frame(solvency=x, PIratio=y23,
bound=rep("Boundary_deny/undecided", length(x)))
##plotting the results
ggplot(data = loanDf, aes(x = solvency, y = PIratio,
colour=deny, fill=deny)) +
geom_point() +
xlab("solvency") +
ylab("PI ratio") +
theme_bw(base_size = 14, base_family = "Helvetica") +
geom_line(data=boundary_12) +
geom_line(data=boundary_13) +
geom_line(data=boundary_23) +
scale_color_manual("bound",
values = c("Boundary_app/deny" = "black", "Boundary_app/undecided" = "grey", "Boundary_deny/undecided" = "blue")
